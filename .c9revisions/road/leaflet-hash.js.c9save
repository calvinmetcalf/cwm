{"ts":1355931202516,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1355931207406,"patch":[[{"diffs":[[1,"(function(window) {\r\n    var HAS_HASHCHANGE = (function() {\r\n        var doc_mode = window.documentMode;\r\n        return ('onhashchange' in window) &&\r\n            (doc_mode === undefined || doc_mode > 7);\r\n    })();\r\n    \r\n    L.Hash = function(map) {\r\n        this.onHashChange = L.Util.bind(this.onHashChange, this);\r\n    \r\n        if (map) {\r\n            this.init(map);\r\n        }\r\n    };\r\n    \r\n    L.Hash.prototype.map = null;\r\n    L.Hash.prototype.lastHash = null;\r\n    L.Hash.prototype.parseHash = function(hash) {\r\n        if(hash.indexOf('#') == 0) {\r\n            hash = hash.substr(1);\r\n        }\r\n        var args = hash.split(\"/\");\r\n        if (args.length == 3) {\r\n            var zoom = parseInt(args[0], 10),\r\n                lat = parseFloat(args[1]),\r\n                lon = parseFloat(args[2]);\r\n            if (isNaN(zoom) || isNaN(lat) || isNaN(lon)) {\r\n                return false;\r\n            } else {\r\n                return {\r\n                    center: new L.LatLng(lat, lon),\r\n                    zoom: zoom\r\n                };\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n    L.Hash.prototype.formatHash = function(map) {\r\n        var center = map.getCenter(),\r\n            zoom = map.getZoom(),\r\n            precision = Math.max(0, Math.ceil(Math.log(zoom) / Math.LN2));\r\n        \r\n        return \"#\" + [zoom,\r\n            center.lat.toFixed(precision),\r\n            center.lng.toFixed(precision)\r\n        ].join(\"/\");\r\n    };\r\n    \r\n    L.Hash.prototype.init = function(map) {\r\n        this.map = map;\r\n        \r\n        this.map.on(\"moveend\", this.onMapMove, this);\r\n        \r\n        // reset the hash\r\n        this.lastHash = null;\r\n        this.onHashChange();\r\n    \r\n        if (!this.isListening) {\r\n            this.startListening();\r\n        }\r\n    };\r\n    \r\n    L.Hash.prototype.remove = function() {\r\n        this.map = null;\r\n        if (this.isListening) {\r\n            this.stopListening();\r\n        }\r\n    };\r\n    \r\n    L.Hash.prototype.onMapMove = function(map) {\r\n        // bail if we're moving the map (updating from a hash),\r\n        // or if the map has no zoom set\r\n        \r\n        if (this.movingMap || this.map.getZoom() === 0) {\r\n            return false;\r\n        }\r\n        \r\n        var hash = this.formatHash(this.map);\r\n        if (this.lastHash != hash) {\r\n            location.replace(hash);\r\n            this.lastHash = hash;\r\n        }\r\n    };\r\n    \r\n    L.Hash.prototype.movingMap = false;\r\n    L.Hash.prototype.update = function() {\r\n        var hash = location.hash;\r\n        if (hash === this.lastHash) {\r\n            // console.info(\"(no change)\");\r\n            return;\r\n        }\r\n        var parsed = this.parseHash(hash);\r\n        if (parsed) {\r\n            // console.log(\"parsed:\", parsed.zoom, parsed.center.toString());\r\n            this.movingMap = true;\r\n           \r\n            this.map.setView(parsed.center, parsed.zoom);\r\n            \r\n            this.movingMap = false;\r\n        } else {\r\n            // console.warn(\"parse error; resetting:\", this.map.getCenter(), this.map.getZoom());\r\n            this.onMapMove(this.map);\r\n        }\r\n    };\r\n    \r\n    // defer hash change updates every 100ms\r\n    L.Hash.prototype.changeDefer = 100;\r\n    L.Hash.prototype.changeTimeout= null;\r\n    L.Hash.prototype.onHashChange = function() {\r\n        // throttle calls to update() so that they only happen every\r\n        // `changeDefer` ms\r\n        if (!this.changeTimeout) {\r\n            var that = this;\r\n            this.changeTimeout = setTimeout(function() {\r\n                that.update();\r\n                that.changeTimeout = null;\r\n            }, this.changeDefer);\r\n        }\r\n    };\r\n\r\n    L.Hash.prototype.isListening = false;\r\n    L.Hash.prototype.hashChangeInterval = null;\r\n    L.Hash.prototype.startListening = function() {\r\n        if (HAS_HASHCHANGE) {\r\n            L.DomEvent.addListener(window, \"hashchange\", this.onHashChange);\r\n        } else {\r\n            clearInterval(this.hashChangeInterval);\r\n            this.hashChangeInterval = setInterval(this.onHashChange, 50);\r\n        }\r\n        this.isListening = true;\r\n    };\r\n  \r\n    L.Hash.prototype.stopListening = function() {\r\n        if (HAS_HASHCHANGE) {\r\n            L.DomEvent.removeListener(window, \"hashchange\", this.onHashChange);\r\n        } else {\r\n            clearInterval(this.hashChangeInterval);\r\n        }\r\n        this.isListening = false;\r\n    };\r\n    \r\n    L.hash = function(map){\r\n        return new L.Hash(map);\t\r\n    };\r\n    L.Map.prototype.addHash = function(){\r\n\t\tthis._hash = L.hash(this);\r\n\t};\r\n\tL.Map.prototype.removeHash = function(){\r\n\t\tthis._hash.remove();\r\n\t};\r\n})(window);"]],"start1":0,"start2":0,"length1":0,"length2":4693}]],"length":4693,"saved":false}
{"ts":1355931301883,"patch":[[{"diffs":[[0,"pe.map = null;\r\n"],[1,"    \r\n"],[0,"    L.Hash.proto"]],"start1":419,"start2":419,"length1":32,"length2":38},{"diffs":[[0,"stHash = null;\r\n"],[1,"    \r\n"],[0,"    L.Hash.proto"]],"start1":464,"start2":464,"length1":32,"length2":38},{"diffs":[[0," }\r\n    };\r\n"],[1,"    \r\n"],[0,"    L.Hash.p"]],"start1":1138,"start2":1138,"length1":24,"length2":30},{"diffs":[[0,"ngMap = false;\r\n"],[1,"    \r\n"],[0,"    L.Hash.proto"]],"start1":2497,"start2":2497,"length1":32,"length2":38},{"diffs":[[0,"= 100;\r\n"],[1,"    \r\n"],[0,"    L.Ha"]],"start1":3279,"start2":3279,"length1":16,"length2":22},{"diffs":[[0,"Timeout= null;\r\n"],[1,"    \r\n"],[0,"    L.Hash.proto"]],"start1":3320,"start2":3320,"length1":32,"length2":38},{"diffs":[[0,"g = false;\r\n"],[1,"    \r\n"],[0,"    L.Hash.p"]],"start1":3778,"start2":3778,"length1":24,"length2":30},{"diffs":[[0,"al = null;\r\n"],[1,"    \r\n"],[0,"    L.Hash.p"]],"start1":3833,"start2":3833,"length1":24,"length2":30},{"diffs":[[0,";\t\r\n    };\r\n"],[1,"    \r\n"],[0,"    L.Map.pr"]],"start1":4568,"start2":4568,"length1":24,"length2":30},{"diffs":[[0,";\r\n\t};\r\n"],[1,"\r\n"],[0,"\tL.Map.p"]],"start1":4656,"start2":4656,"length1":16,"length2":18},{"diffs":[[0,"ove();\r\n"],[-1,""],[0,"\t};\r\n"],[1,"\r\n"],[0,"})(windo"]],"start1":4725,"start2":4725,"length1":21,"length2":23}]],"length":4751,"saved":false}
